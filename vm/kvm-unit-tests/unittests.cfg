##############################################################################
# unittest configuration
#
# [unittest_name]
# file = <name>.flat		# Name of the flat file to be used.
# smp  = <num>			# Number of processors the VM will use
#				# during this test. Use $MAX_SMP to use
#				# the maximum the host supports. Defaults
#				# to one.
# extra_params = -append <params...>	# Additional parameters used.
# arch = i386|x86_64			# Select one if the test case is
#					# specific to only one.
# groups = <group_name1> <group_name2> ...	# Used to identify test cases
#						# with run_tests -g ...
#						# Specify group_name=nodefault
#						# to have test not run by
#						# default
# accel = kvm|tcg		# Optionally specify if test must run with
#				# kvm or tcg. If not specified, then kvm will
#				# be used when available.
# timeout = <duration>		# Optionally specify a timeout.
# check = <path>=<value> # check a file for a particular value before running
#                        # a test. The check line can contain multiple files
#                        # to check separated by a space but each check
#                        # parameter needs to be of the form <path>=<value>
##############################################################################

# RHEL8: Disabled due to https://bugzilla.redhat.com/show_bug.cgi?id=1645235
# Beaker machine: dell-per210ii-01.khw.lab.eng.bos.redhat.com
# [apic-split]
# file = apic.flat
# smp = 2
# extra_params = -cpu qemu64,+x2apic,+tsc-deadline -machine kernel_irqchip=split
# arch = x86_64

[ioapic-split]
file = ioapic.flat
extra_params = -cpu qemu64 -machine kernel_irqchip=split
arch = x86_64

# RHEL8: Disabled due to https://bugzilla.redhat.com/show_bug.cgi?id=1645235
# Beaker machine: dell-per210ii-01.khw.lab.eng.bos.redhat.com
# [apic]
# file = apic.flat
# smp = 2
# extra_params = -cpu qemu64,+x2apic,+tsc-deadline
# arch = x86_64
# timeout = 30

[ioapic]
file = ioapic.flat
extra_params = -cpu qemu64
arch = x86_64

[smptest]
file = smptest.flat
smp = 2

[smptest3]
file = smptest.flat
smp = 3

[vmexit_cpuid]
file = vmexit.flat
extra_params = -append 'cpuid'
groups = vmexit

[vmexit_vmcall]
file = vmexit.flat
extra_params = -append 'vmcall'
groups = vmexit

[vmexit_mov_from_cr8]
file = vmexit.flat
extra_params = -append 'mov_from_cr8'
groups = vmexit

[vmexit_mov_to_cr8]
file = vmexit.flat
extra_params = -append 'mov_to_cr8'
groups = vmexit

[vmexit_inl_pmtimer]
file = vmexit.flat
extra_params = -append 'inl_from_pmtimer'
groups = vmexit

[vmexit_ipi]
file = vmexit.flat
smp = 2
extra_params = -append 'ipi'
groups = vmexit

[vmexit_ipi_halt]
file = vmexit.flat
smp = 2
extra_params = -append 'ipi_halt'
groups = vmexit

[vmexit_ple_round_robin]
file = vmexit.flat
extra_params = -append 'ple_round_robin'
groups = vmexit

[vmexit_tscdeadline]
file = vmexit.flat
groups = vmexit
extra_params = -cpu qemu64,+x2apic,+tsc-deadline -append tscdeadline

[vmexit_tscdeadline_immed]
file = vmexit.flat
groups = vmexit
extra_params = -cpu qemu64,+x2apic,+tsc-deadline -append tscdeadline_immed

[access]
file = access.flat
arch = x86_64
extra_params = -cpu host

[smap]
file = smap.flat
extra_params = -cpu host

[pku]
file = pku.flat
arch = x86_64
extra_params = -cpu host

# Commented out on upstream
#[asyncpf]
#file = asyncpf.flat

[emulator]
file = emulator.flat
arch = x86_64

[eventinj]
file = eventinj.flat

[hypercall]
file = hypercall.flat

[idt_test]
file = idt_test.flat
arch = x86_64

# Commented out on upstream
#[init]
#file = init.flat

[memory]
file = memory.flat
extra_params = -cpu host
arch = x86_64

[msr]
file = msr.flat

# RHEL8: Disabled due to https://bugzilla.redhat.com/show_bug.cgi?id=1645560
# Beaker machine: dell-pet130-01.ml3.eng.bos.redhat.com
# [pmu]
# file = pmu.flat
# extra_params = -cpu host
# check = /proc/sys/kernel/nmi_watchdog=0

[vmware_backdoors]
file = vmware_backdoors.flat
extra_params = -machine vmport=on
arch = x86_64

# RHEL8 disabled: Very hardware-depedent and fails a lot
# [port80]
# file = port80.flat

[realmode]
file = realmode.flat

[s3]
file = s3.flat

[sieve]
file = sieve.flat

[syscall]
file = syscall.flat
arch = x86_64
extra_params = -cpu Opteron_G1,vendor=AuthenticAMD

[tsc]
file = tsc.flat
extra_params = -cpu kvm64,+rdtscp

[tsc_adjust]
file = tsc_adjust.flat
extra_params = -cpu host

[xsave]
file = xsave.flat
arch = x86_64
extra_params = -cpu host

[rmap_chain]
file = rmap_chain.flat
arch = x86_64

[svm]
file = svm.flat
smp = 2
extra_params = -cpu qemu64,+svm
arch = x86_64

[taskswitch]
file = taskswitch.flat
arch = i386
groups = tasks

[taskswitch2]
file = taskswitch2.flat
arch = i386
groups = tasks

[kvmclock_test]
file = kvmclock_test.flat
smp = 2
extra_params = --append "10000000 `date +%s`"

[pcid]
file = pcid.flat
extra_params = -cpu qemu64,+pcid
arch = x86_64

[umip]
file = umip.flat
extra_params = -cpu qemu64,+umip

# RHEL8: disable all nested virtualization tests
# [vmx]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append -exit_monitor_from_l2_test
# arch = x86_64
# groups = vmx
# 
# [vmx_null]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append null
# arch = x86_64
# groups = vmx
# 
# [vmx_test_vmx_feature_control]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append test_vmx_feature_control
# arch = x86_64
# groups = vmx
# 
# [vmx_test_vmxon]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append test_vmxon
# arch = x86_64
# groups = vmx
# 
# [vmx_test_vmptrld]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append test_vmptrld
# arch = x86_64
# groups = vmx
# 
# [vmx_test_vmclear]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append test_vmclear
# arch = x86_64
# groups = vmx
# 
# [vmx_test_vmptrst]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append test_vmptrst
# arch = x86_64
# groups = vmx
# 
# [vmx_test_vmwrite_vmread]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append test_vmwrite_vmread
# arch = x86_64
# groups = vmx
# 
# [vmx_test_vmcs_high]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append test_vmcs_high
# arch = x86_64
# groups = vmx
# 
# [vmx_test_vmcs_lifecycle]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append test_vmcs_lifecycle
# arch = x86_64
# groups = vmx
# 
# [vmx_test_vmx_caps]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append test_vmx_caps
# arch = x86_64
# groups = vmx
# 
# [vmx_vmenter]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append vmenter
# arch = x86_64
# groups = vmx
# 
# [vmx_preemption_timer]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append preemption_timer
# arch = x86_64
# groups = vmx
# 
# [vmx_control_field_PAT]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append control_field_PAT
# arch = x86_64
# groups = vmx
# 
# [vmx_control_field_EFER]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append control_field_EFER
# arch = x86_64
# groups = vmx
# 
# [vmx_CR_shadowing]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append CR_shadowing
# arch = x86_64
# groups = vmx
# 
# [vmx_IO_bitmap]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append I/O_bitmap
# arch = x86_64
# groups = vmx
# 
# [vmx_instruction_intercept]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append instruction_intercept
# arch = x86_64
# groups = vmx
# 
# [vmx_EPT_AD_enabled]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append EPT_A/D_enabled
# arch = x86_64
# groups = vmx
# 
# [vmx_EPT_AD_disabled]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append EPT_A/D_disabled
# arch = x86_64
# groups = vmx
# 
# [vmx_PML]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append PML
# arch = x86_64
# groups = vmx
# 
# [vmx_VPID]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append VPID
# arch = x86_64
# groups = vmx
# 
# [vmx_interrupt]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append interrupt
# arch = x86_64
# groups = vmx
# 
# [vmx_debug_controls]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append debug_controls
# arch = x86_64
# groups = vmx
# 
# [vmx_MSR_switch]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append MSR_switch
# arch = x86_64
# groups = vmx
# 
# [vmx_vmmcall]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append vmmcall
# arch = x86_64
# groups = vmx
# 
# [vmx_disable_RDTSCP]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append disable_RDTSCP
# arch = x86_64
# groups = vmx
# 
# [vmx_int3]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append int3
# arch = x86_64
# groups = vmx
# 
# [vmx_into]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append into
# arch = x86_64
# groups = vmx
# 
# [vmx_exit_monitor_from_l2_test]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append exit_monitor_from_l2_test
# arch = x86_64
# groups = vmx
# 
# [vmx_v2]
# file = vmx.flat
# extra_params = -cpu host,+vmx -append "v2_null_test v2_multiple_entries_test fixture_test_case1 fixture_test_case2"
# arch = x86_64
# groups = vmx
# 
# [vmx_ept_access_test_not_present]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append ept_access_test_not_present
# arch = x86_64
# groups = vmx
# 
# [vmx_ept_access_test_read_only]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append ept_access_test_read_only
# arch = x86_64
# groups = vmx
# 
# [vmx_ept_access_test_write_only]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append ept_access_test_write_only
# arch = x86_64
# groups = vmx
# 
# [vmx_ept_access_test_read_write]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append ept_access_test_read_write
# arch = x86_64
# groups = vmx
# 
# [vmx_ept_access_test_execute_only]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append ept_access_test_execute_only
# arch = x86_64
# groups = vmx
# 
# [vmx_ept_access_test_read_execute]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append ept_access_test_read_execute
# arch = x86_64
# groups = vmx
# 
# [vmx_ept_access_test_write_execute]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append ept_access_test_write_execute
# arch = x86_64
# groups = vmx
# 
# [vmx_ept_access_test_read_write_execute]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append ept_access_test_read_write_execute
# arch = x86_64
# groups = vmx
# 
# [vmx_ept_access_test_reserved_bits]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append ept_access_test_reserved_bits
# arch = x86_64
# groups = vmx
# 
# [vmx_ept_access_test_ignored_bits]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append ept_access_test_ignored_bits
# arch = x86_64
# groups = vmx
# 
# [vmx_ept_access_test_paddr_not_present_ad_disabled]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append ept_access_test_paddr_not_present_ad_disabled
# arch = x86_64
# groups = vmx
# 
# [vmx_ept_access_test_paddr_not_present_ad_enabled]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append ept_access_test_paddr_not_present_ad_enabled
# arch = x86_64
# groups = vmx
# 
# [vmx_ept_access_test_paddr_read_only_ad_disabled]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append ept_access_test_paddr_read_only_ad_disabled
# arch = x86_64
# groups = vmx
# 
# [vmx_ept_access_test_paddr_read_only_ad_enabled]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append ept_access_test_paddr_read_only_ad_enabled
# arch = x86_64
# groups = vmx
# 
# [vmx_ept_access_test_paddr_read_write]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append ept_access_test_paddr_read_write
# arch = x86_64
# groups = vmx
# 
# [vmx_ept_access_test_paddr_read_write_execute]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append ept_access_test_paddr_read_write_execute
# arch = x86_64
# groups = vmx
# 
# [vmx_ept_access_test_paddr_read_execute_ad_disabled]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append ept_access_test_paddr_read_execute_ad_disabled
# arch = x86_64
# groups = vmx
# 
# [vmx_ept_access_test_paddr_read_execute_ad_enabled]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append ept_access_test_paddr_read_execute_ad_enabled
# arch = x86_64
# groups = vmx
# 
# [vmx_ept_access_test_paddr_not_present_page_fault]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append ept_access_test_paddr_not_present_page_fault
# arch = x86_64
# groups = vmx
# 
# [vmx_ept_access_test_force_2m_page]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append ept_access_test_force_2m_page
# arch = x86_64
# groups = vmx
# 
# [vmx_invvpid]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append invvpid_test_v2
# arch = x86_64
# groups = vmx
# 
# [vmx_controls]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append vmx_controls_test
# arch = x86_64
# groups = vmx
# 
# [vmx_vmentry_movss_shadow_test]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append vmentry_movss_shadow_test
# arch = x86_64
# groups = vmx
# 
# [vmx_cr_load_test]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append vmx_cr_load_test
# arch = x86_64
# groups = vmx
# 
# [vmx_nm_test]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append vmx_nm_test
# arch = x86_64
# groups = vmx
# 
# [vmx_pending_event_test]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append vmx_pending_event_test
# arch = x86_64
# groups = vmx
# 
# [vmx_pending_event_hlt_test]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append vmx_pending_event_hlt_test
# arch = x86_64
# groups = vmx
# 
# [vmx_store_tsc_test]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append vmx_store_tsc_test
# arch = x86_64
# groups = vmx
# 
# [vmx_store_tsc_test]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append vmx_store_tsc_test
# arch = x86_64
# groups = vmx
# 
# [vmx_db_test]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append vmx_db_test
# arch = x86_64
# groups = vmx
# 
# [vmx_nmi_window_test]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append vmx_nmi_window_test
# arch = x86_64
# groups = vmx
# 
# [vmx_intr_window_test]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2560 -append vmx_intr_window_test
# arch = x86_64
# groups = vmx
# 
# [vmx_eoi_bitmap_ioapic_scan]
# file = vmx.flat
# smp = 2
# extra_params = -cpu host,+vmx -m 2048 -append vmx_eoi_bitmap_ioapic_scan_test
# arch = x86_64
# groups = vmx
# 
# [vmx_hlt_with_rvi_test]
# file = vmx.flat
# extra_params = -cpu host,+vmx -m 2048 -append vmx_hlt_with_rvi_test
# arch = x86_64
# groups = vmx
# timeout = 10
# 
# [vmx_apic_passthrough]
# file = vmx.flat
# smp = 2
# extra_params = -cpu host,+vmx -m 2048 -append vmx_apic_passthrough_test
# arch = x86_64
# groups = vmx
# 
# [vmx_apic_passthrough_thread]
# file = vmx.flat
# smp = 2
# extra_params = -cpu host,+vmx -m 2048 -append vmx_apic_passthrough_thread_test
# arch = x86_64
# groups = vmx
# 
# [vmx_vmcs_shadow_test]
# file = vmx.flat
# smp = 2
# extra_params = -cpu host,+vmx -m 2048 -append vmx_vmcs_shadow_test
# arch = x86_64
# groups = vmx

[debug]
file = debug.flat
arch = x86_64

[hyperv_synic]
file = hyperv_synic.flat
smp = 2
extra_params = -cpu kvm64,hv_vpindex,hv_synic -device hyperv-testdev
groups = hyperv

[hyperv_connections]
file = hyperv_connections.flat
smp = 2
extra_params = -cpu kvm64,hv_vpindex,hv_synic -device hyperv-testdev
groups = hyperv

[hyperv_stimer]
file = hyperv_stimer.flat
smp = 2
extra_params = -cpu kvm64,hv_vpindex,hv_time,hv_synic,hv_stimer -device hyperv-testdev
groups = hyperv

[hyperv_clock]
file = hyperv_clock.flat
smp = 2
extra_params = -cpu kvm64,hv_time
arch = x86_64
groups = hyperv

[intel_iommu]
file = intel-iommu.flat
arch = x86_64
timeout = 30
smp = 4
extra_params = -M q35,kernel-irqchip=split -device intel-iommu,intremap=on,eim=off -device edu
