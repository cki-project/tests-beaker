From e81fc5e46d0a4a4f02c01d75a4088eb6582b0881 Mon Sep 17 00:00:00 2001
From: Jakub Racek <jracek@redhat.com>
Date: Mon, 3 Apr 2017 11:50:00 +0200
Subject: [PATCH] syscalls/syslog: added debugging and message loss check for
 some scripts

syslog0{2,4,8} scripts are occasionally quietly failing. Get more information
on failure (strace, services status, syslog content). Also, check if message
was delayed or lost.

This is a squash of several patches, since these have been used to
gather data for some time. Also, the delay after service restart is
increased to possibly rule out some cases in futher testing.

Signed-off-by: Jakub Racek <jracek@redhat.com>
---
 testcases/kernel/syscalls/syslog/syslog-lib.sh |  52 +++++++
 testcases/kernel/syscalls/syslog/syslog02      |  24 ++-
 testcases/kernel/syscalls/syslog/syslog04      |  23 ++-
 testcases/kernel/syscalls/syslog/syslog08      | 202 +++++++++++++++++--------
 4 files changed, 233 insertions(+), 68 deletions(-)

diff --git a/testcases/kernel/syscalls/syslog/syslog-lib.sh b/testcases/kernel/syscalls/syslog/syslog-lib.sh
index 35c13da..c399e6b 100755
--- a/testcases/kernel/syscalls/syslog/syslog-lib.sh
+++ b/testcases/kernel/syscalls/syslog/syslog-lib.sh
@@ -32,6 +32,56 @@ RSYSLOG_CONFIG=
 # number of seconds to wait for another syslog test to complete
 WAIT_COUNT=60
 
+OUTPUT_FILE_PREFIX=`mktemp -u syslog-tmp.XXXXXX`
+GET_OUTPUT_FILE_CMD="ls -la $OUTPUT_FILE_PREFIX* | grep ^- | awk '{print \$9}'"
+
+LAST_PID=""
+
+get_more_info()
+{
+	if command -v systemctl >/dev/null 2>&1; then
+		systemctl status rsyslog
+		systemctl status systemd-journald
+	else
+		"no systemd, skipping debug dump"
+	fi
+
+	cat $@ | grep tst
+	echo "<---->"
+	journalctl | grep tst
+
+	FILES=`eval $GET_OUTPUT_FILE_CMD`
+	for OUTPUT_FILE in $FILES
+	do
+		if [ -f $OUTPUT_FILE ]; then
+			cat $OUTPUT_FILE
+		fi
+	done
+	remove_temp_files
+}
+
+remove_temp_files()
+{
+	rm -f $OUTPUT_FILE_PREFIX* > /dev/null 2>&1
+}
+
+wrap_syslogtst()
+{
+	remove_temp_files
+	strace -ff -t -vv -o $OUTPUT_FILE_PREFIX syslogtst "$@" 2>&1
+	if [ $? -ne 0 ]; then
+		return $?
+	fi
+
+	# save last pid
+	LAST_PID=`eval $GET_OUTPUT_FILE_CMD | cut -f3 -d "."`
+}
+
+get_last_pid()
+{
+	echo $LAST_PID
+}
+
 cleanup()
 {
 	# Reentrant cleanup -> bad. Especially since rsyslogd on Fedora 13
@@ -39,6 +89,8 @@ cleanup()
 	disable_traps
 	exit_code=$1
 
+	remove_temp_files
+
 	# Restore the previous syslog daemon state.
 	if [ -f "$CONFIG_FILE.ltpback" ]; then
 		if mv "$CONFIG_FILE.ltpback" "$CONFIG_FILE"; then
diff --git a/testcases/kernel/syscalls/syslog/syslog02 b/testcases/kernel/syscalls/syslog/syslog02
index 2213ce3..d06ddab 100755
--- a/testcases/kernel/syscalls/syslog/syslog02
+++ b/testcases/kernel/syscalls/syslog/syslog02
@@ -54,6 +54,8 @@ syslog_case2()
 			# Create the configuration file specific to this level
 			echo "$RSYSLOG_CONFIG" > $CONFIG_FILE
 			echo "mail.$level	$MAILLOG" >> $CONFIG_FILE
+			echo "\$DebugFile /tmp/rsyslog_debug" >> $CONFIG_FILE
+			echo "\$DebugLevel 2" >> $CONFIG_FILE
 			;;
 
 		/etc/syslog-ng/syslog-ng.conf)
@@ -64,6 +66,7 @@ syslog_case2()
 		esac
 
 		restart_syslog_daemon
+		sleep 5
 
 		# Grepping pattern has to be changed whenever the executable name
 		# changes, ex: syslogtst executable.
@@ -76,7 +79,9 @@ syslog_case2()
 		fi
 
 		# syslogtst has to be called with additional level argument(0-7)
-		if ! syslogtst 2 $level_no 2>/dev/null; then
+
+		if ! wrap_syslogtst 2 $level_no; then
+			get_more_info $MAILLOG
 			cleanup 1
 		fi
 		sleep 2
@@ -92,9 +97,26 @@ syslog_case2()
 		if [ $diff -eq 0 ]; then
 			tst_resm TFAIL "***** Level $level failed *****"
 			status_flag=1
+			get_more_info $MAILLOG
+			cat /tmp/rsyslog_debug
+
+			# check if this was caused by delay
+			time_to_sleep=5
+			tst_resm TINFO "Trying to check if message was merely delayed, or lost."
+			tst_resm TINFO "Sleeping $time_to_sleep more seconds."
+
+			newvalue=`grep -c "syslogtst: mail $level test" $MAILLOG`
+			diff=$(( $newvalue - $oldvalue ))
+			if [ $diff -eq 0 ]; then
+				tst_resm TINFO "It's possible that message was lost."
+			elif [ $diff -ge 1 ]; then
+				tst_resm TINFO "It seems that message was delayed."
+			fi
 		elif [ $diff -ge 1 ]; then
 			tst_resm TPASS "***** Level $level passed *****"
 		fi
+
+
 		# Increment the level_no for next level...
 		: $(( level_no += 1 ))
 
diff --git a/testcases/kernel/syscalls/syslog/syslog04 b/testcases/kernel/syscalls/syslog/syslog04
index d1739d3..a7f04b2 100755
--- a/testcases/kernel/syscalls/syslog/syslog04
+++ b/testcases/kernel/syscalls/syslog/syslog04
@@ -55,12 +55,13 @@ syslog_case4()
 	restart_syslog_daemon
 
 	# Run syslogtst in the background and get the process id.
-	syslogtst 4 2>/dev/null &
-	log_pid=$!
-	if ! wait $log_pid; then
+	if ! wrap_syslogtst 4; then
+		get_more_info /var/log/messages
 		cleanup 1
 	fi
 
+	log_pid=`get_last_pid`
+
 	sleep 2
 
 	# check if /var/log/messages script exists
@@ -72,7 +73,23 @@ syslog_case4()
 	found=`grep -c "\[$log_pid\]: syslogtst: user info test." /var/log/messages`
 	if [ $found -ne 1 ]; then
 		status_flag=1
+		get_more_info /var/log/messages
+
+		# check if this was caused by delay
+		time_to_sleep=5
+		tst_resm TINFO "Trying to check if message was merely delayed, or lost."
+		tst_resm TINFO "Sleeping $time_to_sleep more seconds."
+
+		sleep $time_to_sleep
+		new_found=`grep -c "\[$log_pid\]: syslogtst: user info test." /var/log/messages`
+		if [ $found -eq $new_found ]; then
+			tst_resm TINFO "It's possible that message was lost."
+		elif [ $found+1 -eq $new_found ]; then
+			tst_resm TINFO "It seems that message was delayed."
+		fi
+
 	fi
+
 }
 
 tst_resm TINFO "case4: Test the logging option: LOG_PID"
diff --git a/testcases/kernel/syscalls/syslog/syslog08 b/testcases/kernel/syscalls/syslog/syslog08
index 5388620..ec72971 100755
--- a/testcases/kernel/syscalls/syslog/syslog08
+++ b/testcases/kernel/syscalls/syslog/syslog08
@@ -36,85 +36,159 @@
 
 . syslog-lib.sh || exit 1
 
-syslog_case8()
+evaluate_test_result()
 {
-	local facility_no=1
-	local facilities="user mail daemon auth lpr"
-
-	tst_resm TINFO "testing all the facilities"
-
-	for facility in $facilities; do
+	local succ_cond=$1
+	local facility=$2
+	local log_src=$3
+	local delay_detection_attempt=$4
+	local last_attempt=$5
+
+	if [ $delay_detection_attempt -eq 1 ]; then
+		if [ $succ_cond ]; then
+			tst_resm TINFO " Message was probably just delayed."
+			return 0
+		else
+			if [ $last_attempt -eq 1 ]; then
+				tst_resm TINFO " Message was probably lost completely!"
+			fi
+			return 1
+		fi
+	fi
+
+	if [ $succ_cond ]; then
+		tst_resm TPASS " Facility $facility passed"
+		return 0
+	else
+		tst_resm TFAIL " Facility $facility failed"
+		status_flag=1
+		get_more_info $log_src
+		return 1
+	fi
+}
 
-		tst_resm TINFO "Doing facility: $facility..."
 
-		# Create the configuration file specific to this facility
-		# Level is fixed at info.
-		case "$CONFIG_FILE" in
-		/etc/syslog.conf|/etc/rsyslog.conf)
-			echo "$RSYSLOG_CONFIG" > $CONFIG_FILE
-			echo "$facility.info	/var/log/messages" >> $CONFIG_FILE
-			echo "$facility.info	/var/log/maillog" >> $CONFIG_FILE
-			;;
+do_test()
+{
+	local facility=$1
+	local oldvalue=$2
+	local old_mail_check=$3
+	local attempts=$4
+	local delay_detection=$5
 
-		/etc/syslog-ng/syslog-ng.conf)
-			echo "source src{ internal(); unix-dgram(\"/dev/log\"); udp(ip(\"0.0.0.0\") port(514)); };" > $CONFIG_FILE
-			echo "filter f_syslog-$facility { level(info) and facility($facility); };" >> $CONFIG_FILE
-			echo "destination syslog-messages { file(\"/var/log/messages\"); };" >> $CONFIG_FILE
-			echo "destination syslog-mail { file(\"/var/log/maillog\");};" >> $CONFIG_FILE
-			echo "log { source(src); filter(f_syslog-$facility); destination(syslog-mail); };"  >> $CONFIG_FILE
-			echo "log { source(src); filter(f_syslog-$facility); destination(syslog-messages); };"  >> $CONFIG_FILE
-			;;
+	local last_ret=0
 
-		esac
+	for i in `seq 1 $attempts`;
+	do
+		new_mail_check=`grep -c "syslogtst: $facility info test." /var/log/maillog`
+		newvalue=`grep -c "syslogtst: $facility info test." /var/log/messages`
+		diff=$(( $newvalue - $oldvalue ))
+		mail_check=$(( $new_mail_check - $old_mail_check ))
 
-		restart_syslog_daemon
+		last_attempt=$(( i == attempts ))
+		if [ $facility = "mail" ]; then
+			evaluate_test_result "$mail_check -eq 1" $facility /var/log/maillog $delay_detection $last_attempt
 
-		if [ -e /var/log/messages ]; then
-			oldvalue=`grep -c "syslogtst: $facility info test." /var/log/messages`
 		else
-			oldvalue=0
+			evaluate_test_result "$diff -eq 1" $facility /var/log/messages $delay_detection $last_attempt
 		fi
 
-		if [ -e /var/log/maillog ]; then
-			old_mail_check=`grep -c "syslogtst: $facility info test." /var/log/maillog`
-		else
-			old_mail_check=0
-		fi
+		last_ret=$?
 
-		# syslogtst has to be called with one more
-				# additional facility argument(1-6)
-		if ! syslogtst 8 $facility_no 2>/dev/null; then
-			status_flag=1
-			return
+		if [ $last_ret -eq 0 ]; then
+			return 0
 		fi
-		sleep 2
-		# check if /var/log/maillog script exists
-		for logf in messages maillog
-		do
-			if [ ! -e /var/log/$logf ]; then
-				tst_resm TBROK "/var/log/$logf no such log file"
-				cleanup 1
-			fi
-		done
 
-		new_mail_check=`grep -c "syslogtst: $facility info test." /var/log/maillog`
-		newvalue=`grep -c "syslogtst: $facility info test." /var/log/messages`
-		diff=$(( $newvalue - $oldvalue ))
-		mail_check=$(( $new_mail_check - $old_mail_check ))
+		sleep 3
+	done
 
-		if [ $facility = "mail" ]; then
-			if [ $mail_check -ne 1 ]; then
-				tst_resm TFAIL " Facility $facility failed"
-				status_flag=1
-			elif [ $mail_check -eq 1 ]; then
-				tst_resm TPASS " Facility $facility passed"
-			fi
-		elif [ $diff -ne 1 ]; then
-			tst_resm TFAIL " Facility $facility failed"
-			status_flag=1
-		else
-			tst_resm TPASS " Facility $facility passed"
+	return $last_ret
+}
+
+write_config_file()
+{
+	# Create the configuration file specific to this facility
+	# Level is fixed at info.
+	case "$CONFIG_FILE" in
+	/etc/syslog.conf|/etc/rsyslog.conf)
+		echo "$RSYSLOG_CONFIG" > $CONFIG_FILE
+		echo "$facility.info	/var/log/messages" >> $CONFIG_FILE
+		echo "$facility.info	/var/log/maillog" >> $CONFIG_FILE
+		;;
+
+	/etc/syslog-ng/syslog-ng.conf)
+		echo "source src{ internal(); unix-dgram(\"/dev/log\"); udp(ip(\"0.0.0.0\") port(514)); };" > $CONFIG_FILE
+		echo "filter f_syslog-$facility { level(info) and facility($facility); };" >> $CONFIG_FILE
+		echo "destination syslog-messages { file(\"/var/log/messages\"); };" >> $CONFIG_FILE
+		echo "destination syslog-mail { file(\"/var/log/maillog\");};" >> $CONFIG_FILE
+		echo "log { source(src); filter(f_syslog-$facility); destination(syslog-mail); };"  >> $CONFIG_FILE
+		echo "log { source(src); filter(f_syslog-$facility); destination(syslog-messages); };"  >> $CONFIG_FILE
+		;;
+
+	esac
+}
+
+do_loop_test()
+{
+	local facility=$1
+	local facility_no=$2
+
+	tst_resm TINFO "Doing facility: $facility..."
+
+	write_config_file
+
+	restart_syslog_daemon
+
+	if [ -e /var/log/messages ]; then
+		oldvalue=`grep -c "syslogtst: $facility info test." /var/log/messages`
+	else
+		oldvalue=0
+	fi
+
+	if [ -e /var/log/maillog ]; then
+		old_mail_check=`grep -c "syslogtst: $facility info test." /var/log/maillog`
+	else
+		old_mail_check=0
+	fi
+
+	# syslogtst has to be called with one more
+			# additional facility argument(1-6)
+	if ! wrap_syslogtst 8 $facility_no ; then
+		status_flag=1
+		get_more_info /var/log/maillog /var/log/messages
+		return
+	fi
+	sleep 2
+	# check if /var/log/maillog script exists
+	for logf in messages maillog
+	do
+		if [ ! -e /var/log/$logf ]; then
+			tst_resm TBROK "/var/log/$logf no such log file"
+			cleanup 1
 		fi
+	done
+
+	# 1 attempt, no delay detection
+	do_test $facility $oldvalue $old_mail_check 1 0
+
+	if [ $? -ne 0 ]; then
+		# 2 attempts, check if message was merely delayed
+		do_test $facility $oldvalue $old_mail_check 2 1
+	fi
+
+}
+
+syslog_case8()
+{
+	local facility_no=1
+	local facilities="user mail daemon auth lpr"
+
+	tst_resm TINFO "testing all the facilities"
+
+	for facility in $facilities; do
+
+		do_loop_test $facility $facility_no
+
 		# Increment the facility_no for next...
 		: $(( facility_no += 1 ))
 	done
-- 
1.8.3.1

