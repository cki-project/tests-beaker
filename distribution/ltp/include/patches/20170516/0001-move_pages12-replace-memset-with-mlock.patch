From 328e7f914751b218116ab0d9cd62d77750cc3265 Mon Sep 17 00:00:00 2001
Message-Id: <328e7f914751b218116ab0d9cd62d77750cc3265.1496216821.git.jstancek@redhat.com>
From: Jan Stancek <jstancek@redhat.com>
Date: Wed, 31 May 2017 09:40:31 +0200
Subject: [PATCH] move_pages12: replace memset with mlock

Use mlock instead of memset to avoid running into SIGBUS
in low memory conditions.

MAP_POPULATE wouldn't work, as it's only best effort,
for details see:
  http://www.serverphorums.com/read.php?12,1204538,1204539#msg-1204539

Signed-off-by: Jan Stancek <jstancek@redhat.com>
Acked-by: Cyril Hrubis <chrubis@suse.cz>
---
 testcases/kernel/syscalls/move_pages/move_pages12.c | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/testcases/kernel/syscalls/move_pages/move_pages12.c b/testcases/kernel/syscalls/move_pages/move_pages12.c
index e1d956dba67e..4c7d5c2c01b0 100644
--- a/testcases/kernel/syscalls/move_pages/move_pages12.c
+++ b/testcases/kernel/syscalls/move_pages/move_pages12.c
@@ -165,9 +165,15 @@ static void alloc_free_huge_on_node(unsigned int node, size_t size)
 		tst_brk(TBROK | TERRNO, "mbind() failed");
 	}
 
-	numa_bitmask_free(bm);
+	TEST(mlock(mem, size));
+	if (TEST_RETURN) {
+		SAFE_MUNMAP(mem, size);
+		if (TEST_ERRNO == ENOMEM || TEST_ERRNO == EAGAIN)
+			tst_brk(TCONF, "Cannot lock huge pages");
+		tst_brk(TBROK | TTERRNO, "mlock failed");
+	}
 
-	memset(mem, 0, size);
+	numa_bitmask_free(bm);
 
 	SAFE_MUNMAP(mem, size);
 }
-- 
1.8.3.1

